{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sapSystemId": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "defaultValue": "NH1",
            "metadata": {
                "description": "The SAP system ID."
            }
        },
        "vnetRg": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource group containing the virtual network. Leave blank if same as the current resource group."
            }
        },
        "vnet": {
            "type": "string",
            "defaultValue": "sap-prod-vnet-1",
            "metadata": {
                "description": "Virtual network."
            }
        },
        "subnet": {
            "type": "string",
            "defaultValue": "sap-app-subnet",
            "metadata": {
                "description": "Subnet."
            }
        },
        "nsgRg": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource group containing the network security group. Leave blank if same as the current resource group."
            }
        },
        "networkSecurityGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Network security group to apply to the NIC. Leave blank if none."
            }
        },
        "publicIp": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Should a public IP address be deployed."
            }
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_E4s_v3",
                "Standard_E8s_v3"
            ],
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "Virtual machine size."
            }
        },
        "numberOfVms": {
            "type": "int",
            "defaultValue": 3,
            "minValue": 1,
            "maxValue": 99,
            "metadata": {
                "description": "Number of identical servers to deploy."
            }
        },
        "diagStorageAccountName": {
            "type": "String",
            "defaultValue": "[concat('sapstorage', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Name of the storage account for boot diagnostics."
            }
        },
        "adminUser": {
            "type": "String",
            "defaultValue": "adminuser",
            "metadata": {
                "description": "The name of the VM administrator account."
            }
        },
        "sshKeyRg": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Resource group containing the SSH public key object."
            }
        },
        "sshKeyName": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the SSH public key object."
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "label": "[concat('sap-', toLower(parameters('sapSystemId')))]",
        "useCase": "-sbd",
        "avsetName": "[concat(variables('label'), variables('useCase'), '-avset')]",
        "vnetRg": "[if(empty(parameters('vnetRg')), resourceGroup().name, parameters('vnetRg'))]",
        "vnetId": "[resourceId(variables('vnetRg'), 'Microsoft.Network/virtualNetworks', parameters('vnet'))]",
        "subnetId": "[concat(variables('vnetId'), '/subnets/', parameters('subnet'))]",
        "nsgRg": "[if(empty(parameters('nsgRg')), resourceGroup().name, parameters('nsgRg'))]",
        "nsgId": {
            "id": "[resourceId(variables('nsgRg'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup'))]"
        },
        "storageSku": "Premium_LRS",
        "diagStorageAccount": "[concat('https://', parameters('diagStorageAccountName'), '.blob.core.windows.net/')]",
        "osImage": {
            "publisher": "SUSE",
            "offer": "SLES-Standard",
            "sku": "12-SP4-gen2",
            "version": "latest"
        },
        "sshKeyRg": "[if(empty(parameters('sshKeyRg')), resourceGroup().name, parameters('sshKeyRg'))]",
        "sshKeyResourceId": "[resourceId(variables('sshKeyRg'), 'Microsoft.Compute/sshPublicKeys', parameters('sshKeyName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "condition": "[parameters('publicIp')]",
            "name": "[concat(variables('label'), variables('useCase'), copyIndex(1), '-pip1')]",
            "location": "[variables('location')]",
            "dependsOn": [],
            "sku": {
                "name": "Standard"
            },
            "copy": {
                "count": "[parameters('numberOfVms')]",
                "name": "piploop"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('label'), variables('useCase'), copyIndex(1))]",
                    "fqdn": "[concat(variables('label'), variables('useCase'), copyIndex(1), '.', variables('location'), '.cloudapp.azure.com')]"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-03-01",
            "name": "[variables('avsetName')]",
            "location": "[variables('location')]",
            "tags": {},
            "dependsOn": [],
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('label'), variables('useCase'), copyIndex(1), '-nic1')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat(variables('label'), variables('useCase'), copyIndex(1), '-pip1')]"
            ],
            "copy": {
                "count": "[parameters('numberOfVms')]",
                "name": "nicloop"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": "[if(not(parameters('publicIp')), json('null'), json(concat('{\"id\": \"', resourceId(resourceGroup().name, 'Microsoft.Network/publicIPAddresses', concat(variables('label'), variables('useCase'), copyIndex(1), '-pip1')), '\"}')))]",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                                },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "networkSecurityGroup": "[if(empty(parameters('networkSecurityGroup')), json('null'), variables('nsgId'))]",
                "enableAcceleratedNetworking": true
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[concat(variables('label'), variables('useCase'), copyIndex(1))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat(variables('label'), variables('useCase'), copyIndex(1), '-nic1')]",
                "[variables('avsetName')]"
            ],
            "tags": {},
            "copy": {
                "count": "[parameters('numberOfVms')]",
                "name": "vmloop"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkInterfaces', concat(variables('label'), variables('useCase'), copyIndex(1), '-nic1'))]"
                        }
                    ]
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "name": "[concat(variables('label'), variables('useCase'), copyIndex(1), '-os-disk1')]",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[variables('storageSku')]"
                        },
                        "diskSizeGb": 64
                    },
                    "imageReference": "[variables('osImage')]"
                },
                "availabilitySet": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Compute/availabilitySets', variables('avsetName'))]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('label'), variables('useCase'), copyIndex(1))]",
                    "adminUsername": "[parameters('adminUser')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "keyData": "[reference(variables('sshKeyResourceId'), '2019-12-01').publicKey]",
                                    "path": "[concat('/home/', parameters('adminUser'), '/.ssh/authorized_keys')]"
                                }
                            ]
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[variables('diagStorageAccount')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "Resource group": {
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "AvSet name": {
            "type": "string",
            "value": "[variables('avsetName')]"
        }
    }
}